{"version":3,"sources":["webpack:///./src/components/RecipeList.tsx","webpack:///./src/templates/RecipeListByCategory.tsx","webpack:///./src/UI/Typography.tsx"],"names":["RecipeList","recipes","map","r","recipe","node","key","fields","slug","to","frontmatter","title","listQuery","RecipeListByCategory","data","pageContext","recipesByCategory","allMarkdownRemark","edges","filter","category","Dida","styled","p","fonts","monospace","TitleRecipe","h3","colors","rgb","blu","Difficulty","h5","grigio","medium","LinkStyled","Link"],"mappings":"iLAsBeA,EAlBkD,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QAClE,OACE,gCACGA,EAAQC,KAAI,SAAAC,GACX,IAAMC,EAASD,EAAEE,KAEjB,OACE,uBAAKC,IAAKF,EAAOG,OAAOC,MACtB,gBAAC,IAAD,CAAYC,GAAIL,EAAOG,OAAOC,MAC5B,4BAAOJ,EAAOM,YAAYC,cCqB3BC,GAFEC,UAX+B,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC/CC,EAAoBF,EAAKG,kBAAkBC,MAAMC,QAAO,qBAAGd,KAAgBK,YAAYU,WAAaL,EAAYK,YAEtH,OACE,oCACE,yDAA+BL,EAAYK,SAA3C,KACA,kBAAC,EAAD,CAAYnB,QAASe,MAOF,c,kCClCzB,gLAIMK,EAAOC,IAAOC,EAAV,mEAAGD,CAAH,mEACOE,IAAMC,WAMjBC,EAAcJ,IAAOK,GAAV,0EAAGL,CAAH,2DAGNM,IAAOC,IAAIC,KAGhBC,EAAaT,IAAOU,GAAV,yEAAGV,CAAH,6DAGLM,IAAOK,OAAOC,QAGnBC,EAAab,YAAOc,KAAV,yEAAGd,CAAH","file":"component---src-templates-recipe-list-by-category-tsx-5e243f51219b483c88c5.js","sourcesContent":["import * as React from 'react'\nimport { EdgeNodeRecipe } from '../type/EdgeNodeRecipe'\nimport { LinkStyled } from '../UI/Typography'\n\nconst RecipeList: React.FC<{ recipes: Array<EdgeNodeRecipe> }> = ({ recipes }) => {\n  return (\n    <>\n      {recipes.map(r => {\n        const recipe = r.node\n\n        return (\n          <div key={recipe.fields.slug}>\n            <LinkStyled to={recipe.fields.slug}>\n              <span>{recipe.frontmatter.title}</span>\n            </LinkStyled>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nexport default RecipeList\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport RecipeList from '../components/RecipeList'\nimport { EdgeNodeRecipe } from '../type/EdgeNodeRecipe'\n\ninterface IndexPageProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number\n      group: Array<{ fieldValue: string }>\n      edges: Array<EdgeNodeRecipe>\n    }\n  }\n}\n\ntype Props = IndexPageProps & {\n  pageContext: {\n    category: string\n  }\n}\n\nconst RecipeListByCategory: React.FC<Props> = ({ data, pageContext }) => {\n  const recipesByCategory = data.allMarkdownRemark.edges.filter(({ node }) => node.frontmatter.category === pageContext.category)\n\n  return (\n    <>\n      <div>All post categorized as \"{pageContext.category}\"</div>\n      <RecipeList recipes={recipesByCategory} />\n    </>\n  )\n}\n\nexport default RecipeListByCategory\n\nexport const listQuery = graphql`\n  query ListQueryByCat {\n    allMarkdownRemark {\n      edges {\n        node {\n          excerpt(format: HTML)\n          fields {\n            slug\n          }\n          frontmatter {\n            ...frontmatter\n          }\n        }\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\nimport { fonts, colors } from '../styles/variables'\nimport { Link } from 'gatsby'\n\nconst Dida = styled.p`\n  font-family: ${fonts.monospace};\n  font-size: 18px;\n  color: #2c2c2c;\n  user-select: none;\n`\n\nconst TitleRecipe = styled.h3`\n  font-family: 'Fira Code Bold';\n  font-size: 20px;\n  color: ${colors.rgb.blu};\n`\n\nconst Difficulty = styled.h5`\n  font-family: 'Fira Code Medium';\n  font-size: 15px;\n  color: ${colors.grigio.medium};\n`\n\nconst LinkStyled = styled(Link)`\n  text-decoration: none;\n`\n\nexport { Dida, TitleRecipe, LinkStyled, Difficulty }\n"],"sourceRoot":""}