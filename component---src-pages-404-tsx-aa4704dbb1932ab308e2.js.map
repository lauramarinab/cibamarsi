{"version":3,"sources":["webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./src/pages/404.tsx"],"names":["StyledLayoutRoot","styled","div","LayoutRoot","children","className","StyledLayoutMain","main","LayoutMain","IndexLayout","query","render","data","Helmet","title","site","siteMetadata","meta","name","content","description","keywords","href","rel","StyledPage","Page","StyledContainer","Container","NotFoundPage","to"],"mappings":"yKAIMA,EAAmBC,IAAOC,IAAV,mFAAGD,CAAH,MAcPE,EAJ+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OAC5C,gBAACL,EAAD,CAAkBK,UAAWA,GAAYD,ICZrCE,EAAmBL,IAAOM,KAAV,kFAAGN,CAAH,MAcPO,EAJ+B,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OAC5C,gBAACC,EAAD,CAAkBD,UAAWA,GAAYD,IC0C5BK,IAnCe,SAAC,GAAiB,IAAfL,EAAe,EAAfA,SAC/B,OACE,gBAAC,cAAD,CACEM,MAAK,aAWLC,OAAQ,SAACC,GAAD,OACN,gBAAC,EAAD,KACE,gBAACC,EAAA,EAAD,CACEC,MAAOF,EAAKG,KAAKC,aAAaF,MAC9BG,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAASP,EAAKG,KAAKC,aAAaI,aACvD,CAAEF,KAAM,WAAYC,QAASP,EAAKG,KAAKC,aAAaK,aAGxD,gBAACR,EAAA,EAAD,KACE,wBAAMS,KAAK,6DAA6DC,IAAI,eAC5E,wBAAMD,KAAK,oEAAoEC,IAAI,eACnF,wBAAMA,IAAI,gBAAgBD,KAtCtB,qCAwCN,gBAAC,EAAD,KAAalB,KA1BnB,W,oCCvBJ,4BAKMoB,GALN,UAKmBvB,IAAOC,IAAV,uEAAGD,CAAH,OAcDwB,IAFmB,SAAC,GAAD,IAAGrB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OAA6B,gBAACmB,EAAD,CAAYnB,UAAWA,GAAYD,K,kCCjBlG,gBAIMsB,EAJN,UAIwBzB,EAAOC,IAAV,iFAAGD,CAAH,MAaN0B,IAF6B,SAAC,GAAD,IAAGvB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OAA6B,gBAACqB,EAAD,CAAiBrB,UAAWA,GAAYD,K,gQCfjH,uEAoBewB,UAbM,kBACnB,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,KACE,kDACA,iDACuB,gBAAC,OAAD,CAAMC,GAAG,KAAT","file":"component---src-pages-404-tsx-aa4704dbb1932ab308e2.js","sourcesContent":["import * as React from 'react'\n\nimport styled from 'styled-components'\n\nconst StyledLayoutRoot = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  min-height: 100vh; */\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\n  <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst StyledLayoutMain = styled.main`\n  /* display: flex;\n  flex-direction: column;\n  flex: 1; */\n`\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n)\n\nexport default LayoutMain\n","import * as React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport '../styles/index.css'\n\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\n\nconst favicon = '../assets/lm-favicon.grigio.png'\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query IndexLayoutQuery {\n          site {\n            siteMetadata {\n              title\n              description\n              keywords\n            }\n          }\n        }\n      `}\n      render={(data: StaticQueryProps) => (\n        <LayoutRoot>\n          <Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              { name: 'description', content: data.site.siteMetadata.description },\n              { name: 'keywords', content: data.site.siteMetadata.keywords }\n            ]}\n          />\n          <Helmet>\n            <link href=\"https://fonts.googleapis.com/css?family=VT323&display=swap\" rel=\"stylesheet\" />\n            <link href=\"https://fonts.googleapis.com/css?family=Josefin+Sans&display=swap\" rel=\"stylesheet\" />\n            <link rel=\"shortcut icon\" href={favicon} />\n          </Helmet>\n          <LayoutMain>{children}</LayoutMain>\n        </LayoutRoot>\n      )}\n    />\n  )\n}\n\nexport default IndexLayout\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  /* display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem; */\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\n\nimport styled from 'styled-components'\n\nconst StyledContainer = styled.div`\n  /* position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;*/\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, className }) => <StyledContainer className={className}>{children}</StyledContainer>\n\nexport default Container\n","import * as React from 'react'\nimport { Link } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\nconst NotFoundPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>404: Page not found.</h1>\n        <p>\n          You've hit the void. <Link to=\"/\">Go back.</Link>\n        </p>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}